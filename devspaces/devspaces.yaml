apiVersion: batch/v1
kind: Job
metadata:
  name: create-pipeline-local-user
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      containers:
      - image: registry.redhat.io/openshift-gitops-1/argocd-rhel8:v1.5.0
        command:
          - /bin/bash
          - -c
          - |
            export HOME=/home/argocd
            echo "Checking if pipeline account already there..."
            HAS_ACCOUNT=$(kubectl get cm argocd-cm -o jsonpath={.data."accounts\.pipeline"})
            if [ -z "$HAS_ACCOUNT" ];
            then
                # Leave this in for compatibility however in 1.6 we use extraConfigs to handle this
                echo "Pipeline account doesn't exist, adding"
                echo "Getting argocd admin credential..."
                if kubectl get secret argocd-cluster;
                then
                  # Create pipeline user
                  kubectl patch cm argocd-cm --patch '{"data": {"accounts.pipeline": "apiKey"}}'
                else
                  echo "Secret argocd-cluster not available, could not interact with API"
                  exit 1
                fi
            else
                echo "Pipeline account already added, skipping"
            fi
            HAS_SECRET=$(kubectl get secret argocd-env-secret -n $CICD_NAMESPACE --ignore-not-found)
            if [ -z "$HAS_SECRET" ];
            then
              echo "No argo-env-secret present, creating"
              PASSWORD=$(oc get secret argocd-cluster -o jsonpath="{.data.admin\.password}" | base64 -d)
              argocd login --insecure --username admin --password ${PASSWORD} argocd-server
              TOKEN=$(argocd account generate-token --account pipeline)
              if [ "$TOKEN" ];
              then
                kubectl create secret generic argocd-env-secret --from-literal=ARGOCD_AUTH_TOKEN=${TOKEN} -n ${CICD_NAMESPACE}
                ./createProject.sh
              else
                echo "Token $TOKEN could not be generated, no secret created"
                exit 1
              fi
            else
              echo "The secret argocd-env-secret already exists, skipping"
            fi
        env:
        # The CICD namespace where the token needs to be deployed to
        - name: CICD_NAMESPACE
          value: ""
        imagePullPolicy: Always
        name: create-pipeline-local-user
      serviceAccount: argocd-argocd-application-controller
      serviceAccountName: argocd-argocd-application-controller
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 30
